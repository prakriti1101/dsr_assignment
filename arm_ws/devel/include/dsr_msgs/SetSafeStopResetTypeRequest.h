// Generated by gencpp from file dsr_msgs/SetSafeStopResetTypeRequest.msg
// DO NOT EDIT!


#ifndef DSR_MSGS_MESSAGE_SETSAFESTOPRESETTYPEREQUEST_H
#define DSR_MSGS_MESSAGE_SETSAFESTOPRESETTYPEREQUEST_H


#include <string>
#include <vector>
#include <memory>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace dsr_msgs
{
template <class ContainerAllocator>
struct SetSafeStopResetTypeRequest_
{
  typedef SetSafeStopResetTypeRequest_<ContainerAllocator> Type;

  SetSafeStopResetTypeRequest_()
    : reset_type(0)  {
    }
  SetSafeStopResetTypeRequest_(const ContainerAllocator& _alloc)
    : reset_type(0)  {
  (void)_alloc;
    }



   typedef int8_t _reset_type_type;
  _reset_type_type reset_type;





  typedef boost::shared_ptr< ::dsr_msgs::SetSafeStopResetTypeRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::dsr_msgs::SetSafeStopResetTypeRequest_<ContainerAllocator> const> ConstPtr;

}; // struct SetSafeStopResetTypeRequest_

typedef ::dsr_msgs::SetSafeStopResetTypeRequest_<std::allocator<void> > SetSafeStopResetTypeRequest;

typedef boost::shared_ptr< ::dsr_msgs::SetSafeStopResetTypeRequest > SetSafeStopResetTypeRequestPtr;
typedef boost::shared_ptr< ::dsr_msgs::SetSafeStopResetTypeRequest const> SetSafeStopResetTypeRequestConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::dsr_msgs::SetSafeStopResetTypeRequest_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::dsr_msgs::SetSafeStopResetTypeRequest_<ContainerAllocator> >::stream(s, "", v);
return s;
}


template<typename ContainerAllocator1, typename ContainerAllocator2>
bool operator==(const ::dsr_msgs::SetSafeStopResetTypeRequest_<ContainerAllocator1> & lhs, const ::dsr_msgs::SetSafeStopResetTypeRequest_<ContainerAllocator2> & rhs)
{
  return lhs.reset_type == rhs.reset_type;
}

template<typename ContainerAllocator1, typename ContainerAllocator2>
bool operator!=(const ::dsr_msgs::SetSafeStopResetTypeRequest_<ContainerAllocator1> & lhs, const ::dsr_msgs::SetSafeStopResetTypeRequest_<ContainerAllocator2> & rhs)
{
  return !(lhs == rhs);
}


} // namespace dsr_msgs

namespace ros
{
namespace message_traits
{





template <class ContainerAllocator>
struct IsMessage< ::dsr_msgs::SetSafeStopResetTypeRequest_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::dsr_msgs::SetSafeStopResetTypeRequest_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::dsr_msgs::SetSafeStopResetTypeRequest_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::dsr_msgs::SetSafeStopResetTypeRequest_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::dsr_msgs::SetSafeStopResetTypeRequest_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::dsr_msgs::SetSafeStopResetTypeRequest_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::dsr_msgs::SetSafeStopResetTypeRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "dc984cc000f8da662666d043b2ed22bb";
  }

  static const char* value(const ::dsr_msgs::SetSafeStopResetTypeRequest_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xdc984cc000f8da66ULL;
  static const uint64_t static_value2 = 0x2666d043b2ed22bbULL;
};

template<class ContainerAllocator>
struct DataType< ::dsr_msgs::SetSafeStopResetTypeRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "dsr_msgs/SetSafeStopResetTypeRequest";
  }

  static const char* value(const ::dsr_msgs::SetSafeStopResetTypeRequest_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::dsr_msgs::SetSafeStopResetTypeRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "#____________________________________________________________________________________________\n"
"# set_safe_stop_reset_type\n"
"#____________________________________________________________________________________________\n"
"\n"
"int8 reset_type     # 0=SAFE_STOP_RESET_TYPE_DEFAULT = SAFE_STOP_RESET_TYPE_PROGRAM_STOP , 1= SAFE_STOP_RESET_TYPE_PROGRAM_RESUME \n"
;
  }

  static const char* value(const ::dsr_msgs::SetSafeStopResetTypeRequest_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::dsr_msgs::SetSafeStopResetTypeRequest_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.reset_type);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct SetSafeStopResetTypeRequest_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::dsr_msgs::SetSafeStopResetTypeRequest_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::dsr_msgs::SetSafeStopResetTypeRequest_<ContainerAllocator>& v)
  {
    s << indent << "reset_type: ";
    Printer<int8_t>::stream(s, indent + "  ", v.reset_type);
  }
};

} // namespace message_operations
} // namespace ros

#endif // DSR_MSGS_MESSAGE_SETSAFESTOPRESETTYPEREQUEST_H
